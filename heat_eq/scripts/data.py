import numpy as np

res = np.array(
    [1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000, 9000, 10000, 11000])

sequential_time = np.array([
    0.089263, 0.363984, 0.824760, 1.470021, 2.271087, 3.266086, 4.527948,
    5.833436, 7.363150, 9.066547, 10.942300
])
sequential_perf = np.array([
    3.1368, 3.0771, 3.0554, 3.0476, 3.0822, 3.0863, 3.0719, 3.0802, 3.0883,
    3.0962
])

# Performances for 1 node
perf_1node = np.array([
    [
        149.026, 162.073, 89.276, 69.912, 63.979, 61.004, 60.165, 59.485,
        59.296, 59.091, 59.063
    ],
    [
        206.257, 170.276, 96.906, 72.016, 65.250, 62.266, 61.067, 60.139,
        59.174, 59.539, 59.218
    ],
    [
        182.195, 167.600, 88.552, 72.495, 64.260, 61.826, 61.018, 60.111,
        59.516, 59.640, 59.316
    ],
    [
        181.467, 183.216, 90.572, 71.806, 64.492, 61.866, 60.927, 60.069,
        59.607, 59.358, 59.155
    ],
    [
        171.107, 174.253, 101.161, 71.889, 64.355, 61.786, 60.417, 59.790,
        59.177, 59.199, 59.098
    ],
    [
        155.854, 168.105, 89.073, 70.927, 64.133, 61.291, 59.869, 59.231,
        59.256, 58.882, 58.955
    ],
    [
        134.127, 155.119, 95.975, 70.172, 62.608, 60.008, 58.982, 58.565,
        58.590, 58.532, 58.389
    ],
    [
        113.610, 138.854, 94.302, 68.881, 61.853, 59.217, 58.335, 57.539,
        57.257, 57.517, 57.485
    ],
    [
        95.207, 120.340, 82.715, 65.438, 60.586, 58.477, 56.759, 56.245,
        55.977, 55.839, 56.011
    ],
    [
        51.920, 78.331, 68.141, 51.146, 52.343, 51.394, 51.215, 51.432, 51.091,
        51.478, 51.601
    ],
])
time_1node = np.array([
    [
        0.001892, 0.006911, 0.028258, 0.064133, 0.109412, 0.165238, 0.228039,
        0.301259, 0.382488, 0.473850, 0.573626
    ],
    [
        0.001390, 0.006578, 0.026162, 0.062209, 0.107284, 0.161890, 0.224671,
        0.297983, 0.383286, 0.470280, 0.572122
    ],
    [
        0.001575, 0.006685, 0.028598, 0.061798, 0.108938, 0.163042, 0.224853,
        0.298122, 0.381075, 0.469487, 0.571178
    ],
    [
        0.001579, 0.006115, 0.027831, 0.062440, 0.108550, 0.162937, 0.225191,
        0.298327, 0.380493, 0.471716, 0.572738
    ],
    [
        0.001674, 0.006428, 0.025129, 0.062330, 0.108772, 0.163152, 0.227090,
        0.299723, 0.383257, 0.472981, 0.573290
    ],
    [
        0.001833, 0.006664, 0.028296, 0.063222, 0.109151, 0.164463, 0.229283,
        0.302549, 0.382752, 0.475532, 0.574681
    ],
    [
        0.002115, 0.007221, 0.026519, 0.063844, 0.111808, 0.167980, 0.232614,
        0.305995, 0.387102, 0.478375, 0.580243
    ],
    [
        0.002488, 0.008066, 0.026995, 0.065041, 0.113172, 0.170226, 0.235195,
        0.311443, 0.396115, 0.486813, 0.589373
    ],
    [
        0.002951, 0.009313, 0.030482, 0.068546, 0.115544, 0.172380, 0.241723,
        0.318606, 0.405167, 0.501488, 0.604886
    ],
    [
        0.005397, 0.014303, 0.037189, 0.087595, 0.133738, 0.196137, 0.267891,
        0.348428, 0.443953, 0.543945, 0.656587
    ],
])

best_1node_index = np.argmax(np.mean(perf_1node, axis=1))
best_1node = time_1node[np.argmax(np.mean(perf_1node, axis=1))]

time_2node = np.array([
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [
        0.000980, 0.003584, 0.007779, 0.021305, 0.044769, 0.073575, 0.105239,
        0.144164, 0.186606, 0.231901, 0.284122
    ],
    [
        0.001148, 0.003715, 0.007522, 0.022231, 0.044647, 0.073002, 0.105902,
        0.142335, 0.185245, 0.230860, 0.283401
    ],
    [
        0.001150, 0.003012, 0.007765, 0.020360, 0.044089, 0.072964, 0.105234,
        0.146044, 0.184680, 0.231567, 0.282448
    ],
    [
        0.001131, 0.003050, 0.007004, 0.022720, 0.044031, 0.072049, 0.105043,
        0.142933, 0.185683, 0.232136, 0.283051
    ],
    [
        0.001196, 0.003135, 0.007183, 0.021999, 0.044042, 0.072962, 0.106001,
        0.143395, 0.184981, 0.231502, 0.283506
    ],
    [
        0.001323, 0.003416, 0.007702, 0.022033, 0.046323, 0.073586, 0.106757,
        0.144765, 0.187160, 0.233591, 0.287938
    ],
    [
        0.001462, 0.003773, 0.008096, 0.023234, 0.044634, 0.075065, 0.108599,
        0.147607, 0.190230, 0.242067, 0.293255
    ],
    [
        0.001742, 0.004376, 0.009086, 0.025086, 0.050039, 0.076751, 0.111178,
        0.149542, 0.193134, 0.241156, 0.294489
    ],
    [
        0.002697, 0.006579, 0.011970, 0.024792, 0.050665, 0.082937, 0.118999,
        0.159039, 0.205817, 0.256310, 0.310012
    ],
])

perf_2node = np.array([
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [
        293.612, 312.513, 323.988, 211.754, 156.360, 137.006, 130.371, 124.307,
        121.541, 120.742, 119.245
    ],
    [
        251.689, 301.541, 335.036, 201.633, 156.789, 138.079, 129.581, 125.904,
        122.434, 121.286, 119.549
    ],
    [
        254.554, 371.886, 324.580, 221.920, 158.772, 138.151, 130.377, 122.713,
        122.809, 120.916, 119.951
    ],
    [
        259.760, 367.263, 359.859, 197.331, 159.180, 139.906, 130.613, 125.375,
        122.146, 120.619, 119.696
    ],
    [
        244.608, 357.282, 350.908, 203.747, 159.155, 138.155, 129.438, 124.972,
        122.608, 120.949, 119.505
    ],
    [
        218.648, 327.893, 327.209, 203.389, 151.660, 136.984, 128.520, 123.789,
        121.181, 119.868, 117.701
    ],
    [
        197.494, 296.902, 311.314, 192.834, 156.838, 134.285, 126.336, 121.408,
        119.225, 115.705, 115.542
    ],
    [
        164.025, 255.968, 277.370, 178.592, 140.766, 131.339, 123.418, 119.834,
        117.432, 116.108, 115.048
    ],
    [
        104.323, 170.252, 210.969, 183.157, 138.163, 121.539, 115.297, 112.695,
        110.196, 109.244, 109.289
    ],
])

best_2node_index = np.argmax(np.mean(perf_2node, axis=1))
best_2node = time_2node[np.argmax(np.mean(perf_2node, axis=1))]

time_3node = np.array([
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [
        0.000888, 0.002282, 0.005400, 0.010054, 0.022552, 0.042784, 0.065347,
        0.092308, 0.121023, 0.152155, 0.187769
    ],
    [
        0.000979, 0.002523, 0.005399, 0.010007, 0.022618, 0.042245, 0.063930,
        0.091567, 0.121954, 0.150346, 0.185539
    ],
    [
        0.000999, 0.001836, 0.005342, 0.009488, 0.022874, 0.042002, 0.064475,
        0.090941, 0.119209, 0.149350, 0.184751
    ],
    [
        0.000983, 0.001930, 0.004814, 0.009641, 0.022297, 0.041137, 0.063689,
        0.090288, 0.119135, 0.149874, 0.189105
    ],
    [
        0.001004, 0.002014, 0.004697, 0.008814, 0.022342, 0.041056, 0.063567,
        0.089843, 0.119560, 0.150905, 0.186008
    ],
    [
        0.001092, 0.002216, 0.005016, 0.009765, 0.023573, 0.040999, 0.064324,
        0.090669, 0.118904, 0.151746, 0.186053
    ],
    [
        0.001199, 0.002364, 0.005419, 0.009776, 0.022799, 0.041550, 0.065295,
        0.093976, 0.121901, 0.152762, 0.188932
    ],
    [
        0.001357, 0.002706, 0.005831, 0.010651, 0.023293, 0.042205, 0.066538,
        0.094505, 0.123519, 0.156195, 0.192080
    ],
    [
        0.002088, 0.004108, 0.008259, 0.013537, 0.027664, 0.046239, 0.072211,
        0.099708, 0.131688, 0.165414, 0.201918
    ],
])

perf_3node = np.array([
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [
        326.704, 490.905, 466.663, 445.926, 311.488, 235.605, 209.957, 194.145,
        187.414, 184.025, 180.461
    ],
    [
        295.905, 443.958, 466.842, 447.806, 310.319, 238.612, 214.611, 195.891,
        185.992, 186.237, 182.606
    ],
    [
        293.313, 609.981, 471.866, 472.648, 306.859, 239.996, 212.797, 197.059,
        190.283, 187.479, 183.383
    ],
    [
        300.670, 580.418, 523.541, 464.766, 315.903, 245.039, 215.422, 198.484,
        190.375, 186.823, 179.348
    ],
    [
        295.632, 556.211, 536.544, 508.457, 317.251, 245.527, 215.839, 199.461,
        189.699, 185.549, 182.147
    ],
    [
        271.450, 505.377, 502.381, 468.436, 300.099, 245.869, 213.299, 197.648,
        190.743, 184.526, 182.100
    ],
    [
        243.680, 473.712, 465.089, 458.360, 311.279, 242.602, 210.124, 190.729,
        186.056, 183.292, 179.328
    ],
    [
        213.563, 413.945, 432.215, 420.743, 305.453, 238.840, 206.198, 189.629,
        183.620, 179.263, 176.386
    ],
    [
        135.729, 272.695, 305.194, 331.106, 254.008, 218.004, 190.005, 179.728,
        172.229, 169.273, 167.792
    ],
])

best_3node_index = np.argmax(np.mean(perf_3node, axis=1))
best_3node = time_3node[np.argmax(np.mean(perf_3node, axis=1))]

time_4node = np.array([
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [
        0.000843, 0.001371, 0.004136, 0.006707, 0.012329, 0.026704, 0.043634,
        0.063912, 0.085335, 0.107981, 0.135307
    ],
    [
        0.000897, 0.001531, 0.003468, 0.006869, 0.012322, 0.025181, 0.042730,
        0.062549, 0.085629, 0.109384, 0.135660
    ],
    [
        0.000916, 0.001551, 0.003728, 0.006390, 0.012464, 0.025383, 0.047310,
        0.065729, 0.085329, 0.108652, 0.135180
    ],
    [
        0.000966, 0.001618, 0.003697, 0.006512, 0.011963, 0.024325, 0.044410,
        0.063660, 0.085286, 0.108948, 0.135280
    ],
    [
        0.001026, 0.001778, 0.003874, 0.006937, 0.012583, 0.026318, 0.042873,
        0.063433, 0.085769, 0.110072, 0.136683
    ],
    [
        0.001176, 0.002034, 0.004470, 0.007390, 0.013352, 0.024293, 0.043779,
        0.065494, 0.087639, 0.111753, 0.139152
    ],
    [
        0.001671, 0.002923, 0.005898, 0.009523, 0.013875, 0.026011, 0.046131,
        0.067688, 0.092100, 0.117293, 0.145112
    ],
])

perf_4node = np.array([
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [
        347.784, 817.068, 609.738, 667.977, 568.151, 378.046, 314.465, 280.398,
        265.787, 259.307, 250.400
    ],
    [
        330.459, 731.629, 726.819, 652.217, 568.981, 401.900, 321.088, 286.499,
        264.875, 255.989, 249.747
    ],
    [
        326.695, 722.136, 675.981, 701.100, 561.927, 399.386, 292.218, 274.116,
        265.800, 257.704, 250.633
    ],
    [
        309.406, 692.249, 681.564, 688.011, 586.070, 416.317, 310.289, 281.558,
        265.937, 257.004, 250.448
    ],
    [
        289.967, 630.068, 650.486, 646.069, 556.407, 388.495, 320.039, 282.513,
        264.433, 254.379, 247.875
    ],
    [
        250.266, 550.865, 563.831, 606.276, 524.568, 415.250, 313.793, 273.935,
        258.793, 250.571, 243.476
    ],
    [
        171.625, 383.182, 427.322, 470.546, 526.852, 387.547, 297.416, 264.753,
        246.258, 238.720, 233.487
    ],
])

best_4node_index = np.argmax(np.mean(perf_4node, axis=1))
best_4node = time_4node[np.argmax(np.mean(perf_4node, axis=1))]
