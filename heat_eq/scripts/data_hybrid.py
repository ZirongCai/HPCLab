import numpy as np

# Data for 1 node hybrid
omp_1node_topo = np.array([[(1, 48), 1], [(2, 24), 1], [(4, 12), 1], [
    (8, 6), 1
], [(12, 4), 1], [(24, 2), 1], [(1, 24), 2], [(2, 12), 2], [
    (4, 6), 2
], [(8, 3), 2], [(12, 2), 2], [(24, 1), 2], [(1, 12), 4], [
    (2, 6), 4
], [(3, 4), 4], [(6, 2), 4], [(12, 1), 4], [(1, 6), 8], [(2, 3), 8], [
    (3, 2), 8
], [(6, 1), 8], [(1, 4), 12], [(2, 2), 12], [(4, 1), 12], [(1, 2), 24],
                           [(2, 1), 24]],
                          dtype="object")
omp_1node_perf = np.array([
    # 1 OMP thread per MPI process
    [
        141.424, 156.210, 94.665, 69.184, 63.862, 61.073, 60.034, 59.234,
        59.134, 58.934, 58.784
    ],
    [
        185.030, 167.508, 102.154, 71.093, 64.776, 62.081, 60.592, 59.640,
        59.500, 59.382, 59.449
    ],
    [
        172.689, 186.222, 94.266, 72.779, 63.722, 61.916, 60.598, 59.869,
        59.483, 59.438, 59.261
    ],
    [
        146.976, 168.918, 88.527, 68.105, 63.118, 60.862, 59.262, 58.066,
        59.093, 58.885, 58.919
    ],
    [
        129.673, 157.699, 91.106, 68.530, 62.650, 60.461, 59.055, 58.613,
        58.509, 57.856, 58.425
    ],
    [
        84.479, 123.102, 91.861, 66.959, 60.641, 58.078, 56.463, 56.337,
        55.927, 56.082, 55.924
    ],
    # 2 OMP threads per MPI process
    [
        62.627, 147.809, 93.263, 69.560, 62.709, 61.334, 59.721, 59.337,
        58.830, 58.804, 58.925
    ],
    [
        47.691, 142.301, 91.489, 70.950, 64.886, 61.217, 60.679, 59.679,
        59.458, 59.221, 59.293
    ],
    [
        129.796, 182.679, 96.749, 69.564, 64.547, 61.663, 60.237, 59.820,
        59.430, 59.057, 59.018
    ],
    [
        93.555, 147.175, 99.295, 70.434, 63.667, 61.089, 59.642, 59.069,
        58.770, 58.572, 58.661
    ],
    [
        54.439, 135.696, 96.900, 69.174, 62.091, 59.815, 58.096, 58.044,
        58.010, 57.624, 57.581
    ],
    [
        42.784, 91.845, 85.290, 63.394, 57.790, 55.989, 53.802, 55.050, 54.147,
        53.898, 54.252
    ],
    # 4 OMP threads per MPI process
    [
        66.704, 159.584, 92.318, 68.071, 62.811, 60.522, 59.695, 58.981,
        58.661, 58.726, 58.646
    ],
    [
        45.295, 142.068, 93.537, 69.559, 63.632, 61.218, 59.437, 58.843,
        58.629, 58.888, 58.908
    ],
    [
        44.769, 154.410, 91.338, 68.336, 63.402, 60.741, 59.478, 59.149,
        58.896, 58.898, 58.951
    ],
    [
        50.195, 135.537, 95.487, 66.795, 62.375, 60.471, 59.345, 58.978,
        58.471, 58.249, 58.520
    ],
    [
        48.379, 89.147, 84.329, 64.680, 59.412, 57.071, 56.922, 56.108, 56.446,
        55.803, 56.100
    ],
    # 8 OMP threads per MPI process
    [
        94.940, 160.961, 87.656, 67.801, 61.732, 59.955, 57.985, 58.608,
        58.658, 58.501, 58.669
    ],
    [
        31.160, 159.655, 92.544, 66.560, 61.511, 58.694, 58.251, 57.575,
        57.562, 57.707, 57.987
    ],
    [
        42.420, 150.908, 88.474, 67.179, 61.078, 58.786, 59.228, 58.341,
        57.995, 57.629, 58.234
    ],
    [
        32.073, 87.894, 85.260, 65.708, 59.346, 58.320, 57.913, 57.583, 57.404,
        57.354, 57.755
    ],
    # 12 OMP threads per MPI process
    [
        41.060, 110.478, 89.288, 65.397, 60.081, 58.383, 58.844, 58.142,
        58.319, 57.952, 57.298
    ],
    [
        40.483, 144.010, 86.068, 65.851, 60.098, 57.620, 57.112, 57.194,
        57.045, 56.810, 57.127
    ],
    [
        24.831, 81.352, 82.308, 65.122, 58.263, 58.201, 57.916, 57.469, 57.362,
        57.181, 56.133
    ],
    # 24 OMP threads per MPI process
    # 48 OMP threads per MPI process
])

omp_1node_best_index = np.argmax(np.mean(omp_1node_perf, axis=1))
omp_1node_best_perf = omp_1node_perf[omp_1node_best_index]
omp_1node_best_topo = omp_1node_topo[omp_1node_best_index]

# Data for 1 node hybrid
omp_2node_topo = np.array([
    [(1, 96), 1],
    [(2, 48), 1],
    [(4, 24), 1],
    [(8, 12), 1],
    [(12, 8), 1],
    [(24, 4), 1],
    [(1, 48), 2],
    [(2, 24), 2],
    [(4, 12), 2],
    [(8, 6), 2],
    [(12, 4), 2],
    [(24, 2), 2],
    [(1, 24), 4],
    [(2, 12), 4],
    [(4, 6), 4],
    [(8, 3), 4],
    [(12, 2), 4],
    [(24, 1), 4],
    [(1, 12), 8],
    [(2, 6), 8],
    [(4, 3), 8],
    [(6, 2), 8],
    [(12, 1), 8],
    [(1, 8), 12],
    [(2, 4), 12],
    [(4, 2), 12],
    [(8, 1), 12],
    [(1, 4), 24],
    [(2, 2), 24],
    [(4, 1), 24],
],
                          dtype="object")

omp_2node_perf = np.array([
    # 1 OMP thread per MPI process
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [
        5.526, 154.629, 90.832, 67.347, 62.899, 60.283, 59.082, 57.820, 58.688,
        58.457, 58.506
    ],
    [
        26.253, 273.260, 97.114, 69.539, 62.717, 60.330, 59.333, 57.788,
        58.572, 58.199, 58.436
    ],
    [
        2.539, 36.233, 97.374, 68.839, 62.479, 59.941, 58.973, 57.825, 58.233,
        57.673, 58.055
    ],
    [
        112.287, 257.605, 98.428, 67.862, 61.265, 59.137, 58.098, 57.211,
        57.525, 56.914, 57.522
    ],
    [
        88.956, 157.752, 91.352, 65.062, 58.820, 56.890, 55.796, 54.971,
        55.075, 54.521, 55.156
    ],
    # 2 OMP threads per MPI process
    [
        71.219, 60.083, 86.358, 65.257, 59.194, 58.542, 57.592, 57.371, 57.185,
        57.383, 56.972
    ],
    [
        104.358, 173.456, 91.905, 67.943, 62.238, 59.144, 59.095, 58.574,
        58.253, 58.456, 58.309
    ],
    [
        82.653, 179.994, 96.436, 69.337, 62.809, 60.518, 59.604, 58.283,
        58.749, 58.372, 58.544
    ],
    [
        39.315, 162.098, 87.555, 69.116, 62.074, 60.046, 58.995, 58.365,
        57.808, 58.275, 58.108
    ],
    [
        112.617, 208.212, 96.182, 68.228, 61.526, 57.848, 58.180, 57.771,
        57.628, 57.558, 57.480
    ],
    [
        67.196, 145.690, 89.661, 66.188, 59.676, 56.982, 55.927, 54.361,
        55.190, 54.961, 54.936
    ],
    # 4 OMP threads per MPI process
    [
        60.201, 156.072, 84.237, 64.666, 59.726, 57.900, 57.509, 57.185,
        57.540, 57.241, 57.486
    ],
    [
        110.462, 163.140, 91.847, 66.571, 61.835, 59.844, 58.623, 58.282,
        58.336, 58.236, 58.199
    ],
    [
        47.623, 165.182, 94.505, 68.585, 61.003, 60.452, 59.251, 58.834,
        58.499, 58.653, 58.393
    ],
    [
        70.670, 166.831, 95.777, 67.477, 61.512, 59.600, 58.572, 58.201,
        58.050, 58.064, 57.835
    ],
    [
        36.991, 133.995, 90.329, 61.439, 60.924, 55.483, 57.149, 57.578,
        57.886, 57.507, 57.393
    ],
    [
        38.953, 76.289, 69.234, 60.046, 56.200, 55.432, 54.394, 53.637, 54.522,
        54.242, 54.655
    ],

    # 8 OMP threads per MPI process
    [
        20.956, 132.586, 84.772, 64.320, 60.008, 58.263, 57.624, 57.078,
        57.514, 57.339, 57.463
    ],
    [
        39.030, 86.423, 88.543, 65.652, 61.068, 59.252, 58.813, 58.351, 58.316,
        58.248, 58.380
    ],
    [
        35.449, 117.130, 92.433, 64.855, 60.947, 58.639, 58.923, 58.756,
        58.230, 57.744, 58.463
    ],
    [
        23.633, 119.341, 89.398, 65.679, 58.731, 59.328, 57.340, 58.418,
        57.757, 58.467, 57.936
    ],
    [
        22.824, 59.689, 71.971, 59.687, 55.362, 53.978, 54.814, 55.276, 56.041,
        56.857, 56.833
    ],

    # 12 OMP threads per MPI process
    [
        17.841, 112.450, 83.973, 63.932, 56.950, 56.998, 57.715, 57.431,
        57.297, 57.322, 57.460
    ],
    [
        27.213, 159.094, 84.745, 63.721, 57.860, 58.550, 58.037, 57.881,
        57.118, 57.330, 57.371
    ],
    [
        25.458, 121.406, 89.430, 67.012, 59.554, 58.942, 57.629, 57.139,
        57.049, 57.809, 58.151
    ],
    [
        23.801, 56.643, 66.235, 57.169, 55.048, 54.886, 54.418, 55.334, 55.968,
        55.631, 56.506
    ],

    # 24 OMP threads per MPI process
    [
        17.622, 102.256, 74.402, 60.754, 56.682, 56.523, 55.783, 56.032,
        56.750, 56.237, 56.241
    ],
    [
        14.373, 91.807, 75.126, 56.280, 55.883, 54.305, 54.957, 54.460, 55.444,
        55.182, 55.516
    ],
    [
        19.557, 51.805, 62.492, 54.666, 53.702, 51.883, 51.814, 52.864, 53.083,
        52.902, 53.120
    ]
])

omp_2node_best_index = np.argmax(np.mean(omp_2node_perf, axis=1))
omp_2node_best_perf = omp_2node_perf[omp_2node_best_index]
omp_2node_best_topo = omp_2node_topo[omp_2node_best_index]

omp_3node_topo = np.array([
    [(2, 72), 1],
    [(4, 36), 1],
    [(8, 18), 1],
    [(12, 12), 1],
    [(24, 6), 1],
    [(1, 72), 2],
    [(2, 36), 2],
    [(4, 18), 2],
    [(8, 9), 2],
    [(12, 6), 2],
    [(24, 3), 2],
    [(1, 36), 4], 
    [(2, 18), 4], 
    [(4, 9), 4], 
    [(8, 9), 4], 
    [(12, 3), 4], 
    [(1, 18), 8], 
    [(2, 9), 8], 
])

omp_3node_perf = np.array([
    # 1 OMP threads per MPI process
    [
        5.755, 439.132, 261.755, 116.296, 94.333, 89.926, 85.237, 83.950,
        82.992, 82.213, 82.619
    ],
    [
        254.704, 546.547, 278.659, 120.977, 95.979, 91.172, 86.295, 85.249,
        84.516, 83.831, 83.666
    ],
    [
        204.252, 531.583, 315.452, 125.534, 94.520, 92.359, 86.661, 85.013,
        84.180, 83.565, 83.509
    ],
    [
        56.809, 454.238, 312.183, 114.054, 99.456, 91.693, 85.720, 83.994,
        83.652, 83.058, 83.070
    ],
    [
        96.095, 298.647, 211.276, 118.259, 94.754, 88.419, 83.061, 81.804,
        80.810, 80.314, 80.249
    ],
    # 2 OMP threads per MPI process
    [
        0.759, 3.010, 5.124, 8.858, 13.972, 19.277, 26.626, 33.205, 37.766,
        41.808, 45.610
    ],
    [
        0.605, 2.444, 5.781, 10.052, 12.066, 16.740, 20.873, 24.444, 30.667,
        32.461, 35.156
    ],
    [
        0.551, 2.265, 5.028, 8.954, 15.496, 19.839, 25.349, 30.150, 30.204,
        31.242, 32.086
    ],
    [
        0.486, 2.010, 4.473, 7.986, 12.615, 18.473, 25.733, 34.121, 40.558,
        41.510, 42.740
    ],
[0.432, 1.890, 4.294, 6.943, 12.721, 19.811, 25.584, 33.043, 38.582, 43.148, 44.678], 
[0.506, 2.311, 4.664, 8.975, 14.647, 15.227, 20.763, 16.176, 26.883, 33.091, 41.926] ,
# 4 OMP threads per MPI process
[0.671, 3.446, 6.415, 10.588, 16.057, 24.108, 32.181, 39.099, 47.706, 49.600, 52.649],
[0.727, 2.939, 6.685, 13.125, 15.040, 21.701, 26.862, 38.414, 44.388, 52.432, 53.684],
[0.648, 2.605, 5.947, 10.735, 16.777, 22.514, 31.090, 40.494, 38.985, 46.538, 51.903],
[0.708, 3.693, 7.090, 11.735, 19.458, 20.259, 26.052, 40.594, 42.291, 48.711, 52.218],

# 8 OMP threads per MPI process
[1.675, 6.626, 9.859, 11.990, 18.935, 28.788, 28.517, 39.836, 47.683, 49.888, 51.992],
[0.723, 3.523, 7.882, 13.592, 14.864, 24.226, 30.134, 37.386, 44.699, 46.201, 50.940], 
])

omp_3node_best_index = np.argmax(np.mean(omp_3node_perf, axis=1))
omp_3node_best_perf = omp_3node_perf[omp_3node_best_index]
omp_3node_best_topo = omp_3node_topo[omp_3node_best_index]
